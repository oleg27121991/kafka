version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: kafkareader-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_MAX_CLIENT_CNXNS: 0
      ZOOKEEPER_SNAP_RETAIN_COUNT: 3
      ZOOKEEPER_PURGE_SNAP_RETAIN_COUNT: 1
      ZOOKEEPER_PURGE_INTERVAL: 24
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD-SHELL", "echo srvr | nc localhost 2181 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    networks:
      - kafka_network

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafkareader-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092 # заменить на адрес сервера
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      
      # Оптимизация производительности
      KAFKA_NUM_NETWORK_THREADS: 3
      KAFKA_NUM_IO_THREADS: 8
      KAFKA_BACKGROUND_THREADS: 10
      KAFKA_QUEUED_MAX_REQUESTS: 500
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
      KAFKA_MESSAGE_MAX_BYTES: 104857600
      KAFKA_REPLICA_FETCH_MAX_BYTES: 104857600
      KAFKA_REPLICA_FETCH_WAIT_MAX_MS: 500
      KAFKA_REPLICA_FETCH_MIN_BYTES: 1
      KAFKA_REPLICA_LAG_TIME_MAX_MS: 10000
      KAFKA_REPLICA_SOCKET_TIMEOUT_MS: 30000
      KAFKA_REPLICA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_REPLICA_HIGH_WATERMARK_CHECKPOINT_INTERVAL_MS: 5000
      KAFKA_REPLICA_FETCH_BACKOFF_MS: 1000
      KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES: 104857600
      KAFKA_NUM_REPLICA_FETCHERS: 2
      
      # Настройки логов
      KAFKA_LOG_SEGMENT_BYTES: 1073741824  # 1GB
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_LOG_SEGMENT_DELETE_DELAY_MS: 60000
      KAFKA_LOG_CLEANUP_POLICY: delete
      KAFKA_LOG_CLEANER_ENABLE: "true"
      KAFKA_LOG_CLEANER_THREADS: 2
      KAFKA_LOG_CLEANER_IO_MAX_BYTES_PER_SECOND: 104857600
      KAFKA_LOG_CLEANER_DEDUPE_BUFFER_SIZE: 134217728
      KAFKA_LOG_CLEANER_IO_BUFFER_SIZE: 524288
      KAFKA_LOG_CLEANER_IO_BUFFER_LOAD_FACTOR: 0.9
      KAFKA_LOG_CLEANER_BACKOFF_MS: 15000
      KAFKA_LOG_CLEANER_MIN_CLEANABLE_RATIO: 0.5
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 86400000
      KAFKA_LOG_CLEANER_MIN_COMPACTION_LAG_MS: 0
      KAFKA_LOG_CLEANER_MAX_COMPACTION_LAG_MS: 9223372036854775807
      KAFKA_LOG_CLEANER_COMPRESSION_TYPE: producer
      
      # Настройки производительности
      KAFKA_PRODUCER_MAX_REQUEST_SIZE: 104857600
      KAFKA_PRODUCER_COMPRESSION_TYPE: snappy
      KAFKA_PRODUCER_BATCH_SIZE: 16384
      KAFKA_PRODUCER_BUFFER_MEMORY: 33554432
      KAFKA_PRODUCER_LINGER_MS: 0
      KAFKA_PRODUCER_MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION: 5
      KAFKA_PRODUCER_RETRIES: 0
      KAFKA_PRODUCER_ACKS: 1
      KAFKA_PRODUCER_ENABLE_IDEMPOTENCE: "false"
      KAFKA_PRODUCER_MAX_BLOCK_MS: 60000
      KAFKA_PRODUCER_REQUEST_TIMEOUT_MS: 30000
      
      # Настройки JVM
      KAFKA_HEAP_OPTS: "-Xmx1G -Xms1G -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -XX:MaxInlineLevel=15"
      
      # Дополнительные настройки
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_FLUSH_INTERVAL_MESSAGES: 10000
      KAFKA_LOG_FLUSH_INTERVAL_MS: 1000
      KAFKA_LOG_FLUSH_OFFSET_CHECKPOINT_INTERVAL_MS: 60000
      KAFKA_LOG_FLUSH_START_OFFSET_CHECKPOINT_INTERVAL_MS: 60000
      KAFKA_LOG_PREALLOCATE: "false"
      KAFKA_LOG_ROLL_JITTER_MS: 0
      KAFKA_LOG_ROLL_HOURS: 168
      KAFKA_LOG_INDEX_INTERVAL_BYTES: 4096
      KAFKA_LOG_INDEX_SIZE_MAX_BYTES: 10485760
      KAFKA_LOG_MESSAGE_FORMAT_VERSION: "2.8"
      KAFKA_LOG_MESSAGE_TIMESTAMP_TYPE: "CreateTime"
      KAFKA_LOG_MESSAGE_TIMESTAMP_DIFFERENCE_MAX_MS: 9223372036854775807
      KAFKA_LOG_MESSAGE_DOWN_CONVERSION_ENABLE: "false"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - kafka_network
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  akhq:
    image: tchiotludo/akhq:latest
    container_name: kafkareader-akhq
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "9090:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:29092"
              topics:
                filters:
                  - ".*"
              groups:
                filters:
                  - ".*"
              security:
                protocol: PLAINTEXT
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - kafka_network

networks:
  kafka_network:
    name: kafkareader_kafka_network
    driver: bridge

volumes:
  zookeeper_data:
  zookeeper_log:
  kafka_data: 